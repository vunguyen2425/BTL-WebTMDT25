<div class="chatbox">
  <!-- Tr·ª£ l√Ω ph√≠a tr√™n -->
  <div class="button" onclick="toggleAssistant()">
    <div>ü§ñ<br>Tr·ª£ l√Ω</div>
  </div>

  <!-- Chatbox tr·ª£ l√Ω ·∫£o -->
  <div class="assistant-container" id="assistant">
    <div class="assistant-header">
      <i class="fas fa-robot"></i>
      <span>Tr·ª£ l√Ω ·∫£o h·ªó tr·ª£</span>
    </div>
    <div class="assistant-body">
      <div class="assistant-question" onclick="showAnswer(1)">
        L√†m c√°ch n√†o ƒë·ªÉ ƒë·∫∑t h√†ng?
      </div>
      <div class="assistant-answer" id="answer1">
        B·∫°n c√≥ th·ªÉ ƒë·∫∑t h√†ng tr·ª±c ti·∫øp tr√™n website b·∫±ng c√°ch ch·ªçn s·∫£n ph·∫©m, th√™m v√†o gi·ªè h√†ng v√† l√†m theo h∆∞·ªõng d·∫´n thanh to√°n. Ho·∫∑c g·ªçi hotline 0815.208.208 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ƒë·∫∑t h√†ng.
      </div>

      <div class="assistant-question" onclick="showAnswer(2)">
        Ch√≠nh s√°ch giao h√†ng th·∫ø n√†o?
      </div>
      <div class="assistant-answer" id="answer2">
        Ch√∫ng t√¥i giao h√†ng to√†n qu·ªëc trong 2-5 ng√†y l√†m vi·ªác. Mi·ªÖn ph√≠ ship cho ƒë∆°n h√†ng t·ª´ 500.000ƒë tr·ªü l√™n trong n·ªôi th√†nh H√† N·ªôi v√† TP.HCM.
      </div>

      <div class="assistant-question" onclick="showAnswer(3)">
        Th·ªùi gian l√†m vi·ªác c·ªßa c·ª≠a h√†ng?
      </div>
      <div class="assistant-answer" id="answer3">
        Th·ªùi gian l√†m vi·ªác: 8h00 - 20h00 t·ª´ Th·ª© 2 ƒë·∫øn Ch·ªß Nh·∫≠t. H·ªó tr·ª£ online 24/7 qua hotline v√† chat.
      </div>

      <div class="assistant-question" onclick="showAnswer(4)">
        C√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m kh√¥ng?
      </div>
      <div class="assistant-answer" id="answer4">
        Ch√∫ng t√¥i ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ trong v√≤ng 7 ng√†y n·∫øu s·∫£n ph·∫©m c√≤n nguy√™n tem m√°c, ch∆∞a qua s·ª≠ d·ª•ng v√† c√≥ h√≥a ƒë∆°n mua h√†ng.
      </div>
      <div class="assistant-question" onclick="showAnswer(5)">
        C√≥ nh·ªØng ph∆∞∆°ng th·ª©c thanh to√°n n√†o?
      </div>
      <div class="assistant-answer" id="answer5">
        Ch√∫ng t√¥i ch·∫•p nh·∫≠n nhi·ªÅu ph∆∞∆°ng th·ª©c: Thanh to√°n khi nh·∫≠n h√†ng (COD), chuy·ªÉn kho·∫£n ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ (Momo, ZaloPay), v√† th·∫ª qu·ªëc t·∫ø (Visa/Mastercard).
      </div>
      <div class="assistant-question" onclick="showAnswer(7)">
        L√†m sao ƒë·ªÉ ki·ªÉm tra th√¥ng tin s·∫£n ph·∫©m chi ti·∫øt?
      </div>
      <div class="assistant-answer" id="answer7">
        B·∫°n c√≥ th·ªÉ xem th√¥ng s·ªë k·ªπ thu·∫≠t, h√¨nh ·∫£nh v√† ƒë√°nh gi√° trong trang chi ti·∫øt s·∫£n ph·∫©m. Li√™n h·ªá hotline n·∫øu c·∫ßn t∆∞ v·∫•n th√™m t·ª´ nh√¢n vi√™n.
      </div>
      <div class="assistant-question" onclick="showAnswer(8)">
        Ch√≠nh s√°ch b·∫£o h√†nh nh∆∞ th·∫ø n√†o?
      </div>
      <div class="assistant-answer" id="answer8">
        S·∫£n ph·∫©m ƒë∆∞·ª£c b·∫£o h√†nh t·ª´ 6-24 th√°ng t√πy lo·∫°i. Mang s·∫£n ph·∫©m k√®m h√≥a ƒë∆°n ƒë·∫øn c·ª≠a h√†ng g·∫ßn nh·∫•t ho·∫∑c li√™n h·ªá t·ªïng ƒë√†i 0815.208.208 ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n.
      </div>
      <div class="assistant-question" onclick="showAnswer(10)">
        Qu√™n m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p ph·∫£i l√†m sao?
      </div>
      <div class="assistant-answer" id="answer10">
        Nh·∫•n "Qu√™n m·∫≠t kh·∫©u" t·∫°i trang ƒëƒÉng nh·∫≠p, nh·∫≠p email ƒëƒÉng k√Ω ƒë·ªÉ nh·∫≠n link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi (ki·ªÉm tra c·∫£ h·ªôp th∆∞ spam n·∫øu kh√¥ng th·∫•y).
      </div>
    </div>
  </div>

  <!-- N√∫t li√™n h·ªá ph√≠a d∆∞·ªõi -->
  <div class="button" onclick="toggleContacts()">
    <div>üí¨<br>Li√™n H·ªá</div>
    <span class="badge">1</span>
  </div>

  <!-- Khung x·ªï ra khi click -->
  <div class="contact-options" id="contacts">
    <a href="https://www.facebook.com/CellphoneSVietnam/?locale=vi_VN" target="_blank" class="contact-item">
      <i class="fab fa-facebook-messenger"></i> Messenger
    </a>
    <a href="https://zalo.me/2709729516030357642" target="_blank" class="contact-item">
      <img src="https://upload.wikimedia.org/wikipedia/commons/9/91/Icon_of_Zalo.svg" alt="Zalo"> Zalo Chat
    </a>
    <a href="tel:0815208208" class="contact-item">
      <i class="fas fa-phone-alt"></i> Call: 0815.208.208
    </a>
  </div>
</div>

<style>
  :root {
    --primary-color: rgb(170, 170, 170);
    --secondary-color: rgb(24, 23, 23);
    --accent-color: rgb(212, 209, 209);
    --dark-color: #2b2d42;
    --light-color: #f8f9fa;
    --success-color: #4cc9f0;
    --warning-color: #f72585;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  .chatbox {
    position: fixed;
    right: 30px;
    bottom: 30px;
    width: 70px;
    z-index: 999;
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .button {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: white;
    padding: 12px 0;
    text-align: center;
    border-radius: 16px;
    cursor: pointer;
    box-shadow: var(--shadow);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
    border: none;
    font-weight: 500;
  }

  .button:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  /* Ph·∫ßn CSS m·ªõi cho tr·ª£ l√Ω ·∫£o */
  .assistant-container {
    position: absolute;
    right: 80px;
    bottom: 120px;
    width: 300px;
    background: white;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    transform-origin: bottom right;
    transform: scale(0);
    opacity: 0;
    transition: var(--transition);
    border: 1px solid rgba(0, 0, 0, 0.05);
    overflow: hidden;
    display: none;
  }

  .assistant-container.show {
    display: block;
    transform: scale(1);
    opacity: 1;
  }

  .assistant-header {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: white;
    padding: 12px 16px;
    font-weight: bold;
    display: flex;
    align-items: center;
  }

  .assistant-header i {
    margin-right: 10px;
    font-size: 18px;
  }

  .assistant-body {
    padding: 16px;
    max-height: 300px;
    overflow-y: auto;
  }

  .assistant-question {
    margin-bottom: 12px;
    cursor: pointer;
    padding: 10px;
    border-radius: 8px;
    transition: var(--transition);
    border: 1px solid #eee;
  }

  .assistant-question:hover {
    background-color: rgba(67, 97, 238, 0.1);
    border-color: var(--accent-color);
  }

  .assistant-answer {
    display: none;
    padding: 12px;
    margin-top: 8px;
    background-color: #f8f9fa;
    border-radius: 8px;
    border-left: 3px solid var(--accent-color);
    animation: fadeIn 0.3s ease;
  }

  /* Ph·∫ßn CSS c≈© cho contact */
  .contact-options {
    display: none;
    position: absolute;
    right: 80px;
    bottom: 0;
    background: white;
    border-radius: 16px;
    padding: 20px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    min-width: 250px;
    transform-origin: bottom right;
    transform: scale(0);
    opacity: 0;
    transition: var(--transition);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .contact-options.show {
    display: block;
    transform: scale(1);
    opacity: 1;
  }

  /* C√°c ph·∫ßn CSS kh√°c gi·ªØ nguy√™n */
  .button:active {
    transform: translateY(1px);
  }

  .button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    opacity: 0;
    transition: var(--transition);
  }

  .button:hover::after {
    opacity: 1;
  }

  .button span.badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background-color: var(--warning-color);
    color: white;
    font-size: 11px;
    padding: 3px 6px;
    border-radius: 50%;
    border: 2px solid white;
    font-weight: bold;
    animation: pulse 1.5s infinite;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }

    50% {
      transform: scale(1.1);
    }

    100% {
      transform: scale(1);
    }
  }

  .contact-item {
    display: flex;
    align-items: center;
    margin-bottom: 16px;
    color: var(--dark-color);
    text-decoration: none;
    font-size: 15px;
    padding: 8px 12px;
    border-radius: 10px;
    transition: var(--transition);
  }

  .contact-item i {
    font-size: 20px;
    width: 30px;
    color: var(--primary-color);
  }

  .contact-item img {
    width: 20px;
    height: 20px;
    margin-right: 10px;
  }

  .contact-item:hover {
    background-color: #7A7A7A;
    transform: translateX(5px);
    text-decoration: none;
  }

  .contact-item:last-child {
    margin-bottom: 0;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .chatbox {
      right: 15px;
      bottom: 15px;
      width: 60px;
    }

    .contact-options,
    .assistant-container {
      right: 70px;
      min-width: 220px;
      max-width: 80vw;
    }

    .assistant-container {
      bottom: 100px;
    }
  }
</style>
<script>
  // Database m·∫´u - c√≥ th·ªÉ thay th·∫ø b·∫±ng d·ªØ li·ªáu t·ª´ server th·ª±c t·∫ø
  const assistantData = {
    questions: [{
        id: 1,
        question: "L√†m c√°ch n√†o ƒë·ªÉ ƒë·∫∑t h√†ng?",
        answer: "B·∫°n c√≥ th·ªÉ ƒë·∫∑t h√†ng tr·ª±c ti·∫øp tr√™n website b·∫±ng c√°ch ch·ªçn s·∫£n ph·∫©m, th√™m v√†o gi·ªè h√†ng v√† l√†m theo h∆∞·ªõng d·∫´n thanh to√°n. Ho·∫∑c g·ªçi hotline 0815.208.208 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ƒë·∫∑t h√†ng."
      },
      {
        id: 2,
        question: "Ch√≠nh s√°ch giao h√†ng th·∫ø n√†o?",
        answer: "Ch√∫ng t√¥i giao h√†ng to√†n qu·ªëc trong 2-5 ng√†y l√†m vi·ªác. Mi·ªÖn ph√≠ ship cho ƒë∆°n h√†ng t·ª´ 500.000ƒë tr·ªü l√™n trong n·ªôi th√†nh H√† N·ªôi v√† TP.HCM."
      },
      {
        id: 3,
        question: "Th·ªùi gian l√†m vi·ªác c·ªßa c·ª≠a h√†ng?",
        answer: "Th·ªùi gian l√†m vi·ªác: 8h00 - 20h00 t·ª´ Th·ª© 2 ƒë·∫øn Ch·ªß Nh·∫≠t. H·ªó tr·ª£ online 24/7 qua hotline v√† chat."
      },
      {
        id: 4,
        question: "C√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m kh√¥ng?",
        answer: "Ch√∫ng t√¥i ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ trong v√≤ng 7 ng√†y n·∫øu s·∫£n ph·∫©m c√≤n nguy√™n tem m√°c, ch∆∞a qua s·ª≠ d·ª•ng v√† c√≥ h√≥a ƒë∆°n mua h√†ng."
      }
    ]
  };

  function toggleAssistant() {
    const assistant = document.getElementById("assistant");
    assistant.classList.toggle('show');

    // ƒê√≥ng contact n·∫øu ƒëang m·ªü
    const contact = document.getElementById("contacts");
    if (contact.classList.contains('show')) {
      contact.classList.remove('show');
    }
  }

  function showAnswer(id) {
    // ·∫®n t·∫•t c·∫£ c√¢u tr·∫£ l·ªùi tr∆∞·ªõc khi hi·ªÉn th·ªã c√¢u m·ªõi
    document.querySelectorAll('.assistant-answer').forEach(answer => {
      answer.style.display = 'none';
    });

    // Hi·ªÉn th·ªã c√¢u tr·∫£ l·ªùi ƒë∆∞·ª£c ch·ªçn
    const answer = document.getElementById(`answer${id}`);
    answer.style.display = 'block';

    // Cu·ªôn ƒë·∫øn c√¢u tr·∫£ l·ªùi
    answer.scrollIntoView({
      behavior: 'smooth',
      block: 'nearest'
    });
  }

  function toggleContacts() {
    const box = document.getElementById("contacts");
    const badge = document.querySelector(".badge");

    box.classList.toggle('show');
    if (box.classList.contains('show')) {
      badge.style.display = "none";
    }

    // ƒê√≥ng assistant n·∫øu ƒëang m·ªü
    const assistant = document.getElementById("assistant");
    if (assistant.classList.contains('show')) {
      assistant.classList.remove('show');
    }
  }

  // ƒê√≥ng khi click b√™n ngo√†i
  document.addEventListener('click', function(event) {
    const box = document.getElementById("contacts");
    const assistant = document.getElementById("assistant");
    const buttons = document.querySelectorAll('.button');
    let isClickInside = false;

    buttons.forEach(button => {
      if (button.contains(event.target)) {
        isClickInside = true;
      }
    });

    if (!box.contains(event.target) && !isClickInside && box.classList.contains('show')) {
      box.classList.remove('show');
    }

    if (!assistant.contains(event.target) && !isClickInside && assistant.classList.contains('show')) {
      assistant.classList.remove('show');
    }
  });
</script>